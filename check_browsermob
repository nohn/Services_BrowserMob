#!/usr/bin/env php
<?php
/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * Services_BrowserMob
 *
 * Copyright (c) 2010-2011, Sebastian Nohn <sebastian@nohn.net>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *   * Neither the name of Sebastian Bergmann nor the names of his
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * This script utilizes the Services_BrowserMob package as Nagios probe.
 *
 * @category  Services
 * @package   BrowserMob
 * @author    Sebastian Nohn <sebastian@nohn.net>
 * @copyright 2011 Sebastian Nohn <sebastian@nohn.net>
 * @license   http://www.php.net/license/3_01.txt  PHP License 3.01
 * @version   $Id$
 * @link      https://github.com/nohn/Services_BrowserMob
 * @since     File available since Release 1.0.0
 */

define('SERVICE_STATUS', 'Service Status:');

require_once 'Console/Getopt.php';
require_once 'Services/BrowserMob.php';

$browsermob = new Services_BrowserMob();

$shortoptions = 'k:s:i:m:c:w:';
$longoptions = array('key=', 'secret=', 'id=', 'lookback=', 'minimum=', 'critical=', 'warning=');

$con = new Console_Getopt;
$args = $con->readPHPArgv();
array_shift($args);
$options = $con->getopt2($args, $shortoptions, $longoptions);

foreach ($options[0] as $option) {
    if ($option[0] == 'k' || $option[0] == '--key') {
        $key = $option[1];
    }
    if ($option[0] == 's' || $option[0] == '--secret') {
        $secret = $option[1];
    }
    if ($option[0] == 'i' || $option[0] == '--id') {
        $id = $option[1];
    }
    if ($option[0] == 'l' || $option[0] == '--lookback') {
        $lookback = $option[1];
    }
    if ($option[0] == 'm' || $option[0] == '--minimum') {
        $minimum = $option[1];
    }
    if ($option[0] == 'c' || $option[0] == '--critical') {
        $critical = $option[1];
    }
    if ($option[0] == 'w' || $option[0] == '--warning') {
        $warning = $option[1];
    }
}

if (!isset($key) || !isset($secret) || !isset($id) || !isset($lookback) || !isset($minimum) || !isset($critical) || !isset($warning)) {
    echo SERVICE_STATUS.' Unknown. Usage: check_browsermob --key=<BrowserMob Key> --secret=<BrowserMob Secret> --id=<BrowserMob ID> --lookback=<Seconds to look back in seconds> --minimum=<Minimum response time in milliseconds> --warning=<Percentage of probes allowed to fail for warning status> --critical=<Percentage of probes allowed to fail for critical status>'."\n";
    exit(3);
} else {
    $response = $browsermob->call(
        $key, 
        $secret, 
        'http://browsermob.com/a/m/'.$id, 
        array('metric' => 'responseTime',
              'start' => (gmmktime()-$lookback).'000', 
              'end' => gmmktime().'000',
              'resolution' => 'hour')
    );
    $locationcount = 0;
    $probecount = 0;
    $probecount_fail = 0;

    $perfdata = array();

    $responsesum = 0;

    foreach ($response as $location => $results) {
        $locationcount++;
        foreach ($results as $result) {
            $perfdata[$location]['responseTime'] = $result->responseTime;
            $perfdata[$location]['minResponseTime'] = $result->minResponseTime;
            $perfdata[$location]['maxResponseTime'] = $result->maxResponseTime;
            $responsesum += $result->responseTime;
            $probecount++;
            if ($result->responseTime > $minimum) {
                $probecount_fail++;
            }
        }
    }

    $probecount_success=$probecount-$probecount_fail;

    $successrate = $probecount_success/$probecount;

    $perfdata_string = '';

    foreach ($perfdata as $location => $perfdatum) {
        foreach ($perfdatum as $measure => $value) {
            $perfdata_string .= $location.'_'.$measure.'='.$value.', ';
        }
    }
    $perfdata_string  = 'ALL_average='.round($responsesum/$probecount).', '.$perfdata_string.' ALL_successrate='.round($successrate, 2);
    $status_string    = $probecount_success.' of '.$probecount.' probes ('.round($successrate*100).'%) on '.$locationcount.' locations succeeded ('.round($responsesum/$probecount).'ms avg. Response Time) Details: http://browsermob.com/monitoring/view/'.$id;

    if ($successrate <= $critical/100) {
        echo SERVICE_STATUS.' Critical - '.$status_string.' | '.$perfdata_string."\n";
        exit(2);
    } else if ($successrate <= $warning/100) {
        echo SERVICE_STATUS.' Warning - '.$status_string.' | '.$perfdata_string."\n";
        exit(1);
    } else {
        echo SERVICE_STATUS.' OK - '.$status_string.' | '.$perfdata_string."\n";
        exit(0);
    }
}
?>
